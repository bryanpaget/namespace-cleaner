---
name: CI Pipeline

on: [push, pull_request]

jobs:
  pre-build-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

      - name: Lint Shell Scripts
        run: |
          sudo apt-get update && sudo apt-get install -y shellcheck
          shellcheck namespace-cleaner.sh

      - name: Lint YAML Files
        run: |
          pip install yamllint
          yamllint .
     
  test:
    runs-on: ubuntu-latest
    needs: pre-build-checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Kind cluster
        uses: helm/kind-action@v1.8.0
        with:
          version: "v0.20.0"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bash

      - name: Run test suite
        run: |
          make test
          make clean

      - name: Debug on failure
        if: ${{ failure() }}
        run: |
          echo "=== Cluster State ==="
          kubectl get ns,configmaps -o wide
          echo "=== Cleaner Logs ==="
          cat /proc/1/fd/1

  build-push:
    runs-on: ubuntu-latest
    needs: test
    env:
      REGISTRY_NAME: k8scc01covidacr
      LOCAL_REPO: localhost:5000
      TRIVY_VERSION: "v0.57.0"
      TRIVY_DATABASES: "ghcr.io/aquasecurity/trivy-db:2,public.ecr.aws/aquasecurity/trivy-db"
      TRIVY_JAVA_DATABASES: "ghcr.io/aquasecurity/trivy-java-db:1,public.ecr.aws/aquasecurity/trivy-java-db"
      TRIVY_MAX_RETRIES: 5
      TRIVY_RETRY_DELAY: 20
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - uses: actions/checkout@v4

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push image locally
        id: build-image
        run: |
          docker build -f Dockerfile -t localhost:5000/filer-sidecar:latest .
          docker push localhost:5000/filer-sidecar:latest
          docker image prune

      - name: Scan image with Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin ${{ env.TRIVY_VERSION }}
          set +e
          for ((i=0; i<${{ env.TRIVY_MAX_RETRIES }}; i++)); do
            echo "Attempt $((i + 1)) of ${{ env.TRIVY_MAX_RETRIES }}..."
            trivy image \
              --db-repository ${{ env.TRIVY_DATABASES }} \
              --java-db-repository ${{ env.TRIVY_JAVA_DATABASES }} \
              localhost:5000/filer-sidecar:latest \
              --exit-code 10 --timeout=20m --scanners vuln --severity CRITICAL
            EXIT_CODE=$?
            if [[ $EXIT_CODE -eq 0 || $EXIT_CODE -eq 10 ]]; then
              echo "Trivy scan completed successfully."
              exit 0
            elif [[ $i -lt $(( ${{ env.TRIVY_MAX_RETRIES }} - 1)) ]]; then
              echo "Retrying in ${{ env.TRIVY_RETRY_DELAY }} seconds..."
              sleep ${{ env.TRIVY_RETRY_DELAY }}
            else
              echo "Scan failed after ${{ env.TRIVY_MAX_RETRIES }} attempts. Exiting."
              exit 1
            fi
          done

      - name: Push image to ACR
        run: |
          docker pull localhost:5000/filer-sidecar:latest
          docker tag localhost:5000/filer-sidecar:latest ${{ env.REGISTRY_NAME }}.azurecr.io/filer-sidecar:${{ github.sha }}
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/filer-sidecar:${{ github.sha }}
