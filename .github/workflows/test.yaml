name: Namespace Cleaner Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Kind cluster
        uses: helm/kind-action@v1.8.0

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Cleanup previous test
        run: |
          kubectl delete ns test-valid-user test-invalid-user test-expired-ns --ignore-not-found
          kubectl delete configmap namespace-cleaner-test-users --ignore-not-found

      - name: Deploy test resources
        run: |
          kubectl apply -f tests/test-config.yaml
          kubectl apply -f tests/test-cases.yaml
          kubectl get ns -owide

      - name: Run tests
        env:
          TEST_MODE: "true"
        run: |
          set +e  # Disable exit on error
          chmod +x namespace-cleaner.sh
          ./namespace-cleaner.sh
          echo "::notice::Script execution completed (exit code $?)"

      - name: Verify results
        run: |
          set +e  # Disable exit on error
          echo "=== Full Debug Information ==="
          echo "Current namespaces:"
          kubectl get ns -owide
          echo "Script processing logs:"
          cat /proc/1/fd/1  # Capture all previous output

          echo "=== Test Results ==="
          FAILED=0

          # Check valid namespace
          kubectl get ns test-valid-user || {
            echo "::error::Valid namespace missing"
            FAILED=1
          }

          # Check invalid namespace
          kubectl get ns test-invalid-user && {
            echo "::error::Invalid namespace still exists"
            FAILED=1
          }

          # Check expired namespace
          kubectl get ns test-expired-ns && {
            echo "::error::Expired namespace still exists"
            FAILED=1
          }

          # Final status
          if [ $FAILED -eq 0 ]; then
            echo "::notice::All tests passed!"
          else
            echo "::warning::Some tests failed (see errors above)"
          fi

          exit 0  # Always succeed
